{"ast":null,"code":"var _jsxFileName = \"/Users/igortihonov/PycharmProjects/googer_app/src/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from '../Auth/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const {\n    token,\n    userId\n  } = useAuth();\n  useEffect(() => {\n    if (!userId) {\n      console.error('User ID is not available.');\n      return;\n    }\n    const connectWebSocket = () => {\n      const newWs = new WebSocket(`ws://localhost:8000/chat/ws/${userId}`);\n      setWs(newWs);\n      newWs.onopen = () => {\n        console.log('Connected to the WebSocket');\n      };\n      newWs.onmessage = event => {\n        const message = event.data;\n        setMessages(prevMessages => [...prevMessages, message]);\n      };\n      newWs.onclose = event => {\n        console.error('WebSocket closed:', event);\n        // Try to reconnect after a delay\n        setTimeout(() => {\n          console.log('Reconnecting to WebSocket...');\n          connectWebSocket(); // Recursively call connectWebSocket\n        }, 1000);\n      };\n      newWs.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n    };\n    connectWebSocket();\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [userId, ws]);\n  const sendMessage = () => {\n    if (inputMessage && ws) {\n      ws.send(inputMessage);\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"8gumstjgyRK7/t8fRQW4nuEJzJU=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","jsxDEV","_jsxDEV","Chat","_s","ws","setWs","messages","setMessages","inputMessage","setInputMessage","token","userId","console","error","connectWebSocket","newWs","WebSocket","onopen","log","onmessage","event","message","data","prevMessages","onclose","setTimeout","onerror","close","sendMessage","send","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/igortihonov/PycharmProjects/googer_app/src/Chat/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../Auth/AuthContext';\n\nconst Chat = () => {\n  const [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n\n  const { token, userId } = useAuth();\n\n  useEffect(() => {\n    if (!userId) {\n      console.error('User ID is not available.');\n      return;\n    }\n\n    const connectWebSocket = () => {\n      const newWs = new WebSocket(`ws://localhost:8000/chat/ws/${userId}`);\n      setWs(newWs);\n\n      newWs.onopen = () => {\n        console.log('Connected to the WebSocket');\n      };\n\n      newWs.onmessage = (event) => {\n        const message = event.data;\n        setMessages((prevMessages) => [...prevMessages, message]);\n      };\n\n      newWs.onclose = (event) => {\n        console.error('WebSocket closed:', event);\n        // Try to reconnect after a delay\n        setTimeout(() => {\n          console.log('Reconnecting to WebSocket...');\n          connectWebSocket(); // Recursively call connectWebSocket\n        }, 1000);\n      };\n\n      newWs.onerror = (error) => {\n        console.error('WebSocket error:', error);\n      };\n    };\n\n    connectWebSocket();\n\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [userId, ws]);\n\n  const sendMessage = () => {\n    if (inputMessage && ws) {\n      ws.send(inputMessage);\n      setInputMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((message, index) => (\n          <div key={index}>{message}</div>\n        ))}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}