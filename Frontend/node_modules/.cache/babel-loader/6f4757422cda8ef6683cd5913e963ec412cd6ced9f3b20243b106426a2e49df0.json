{"ast":null,"code":"var _jsxFileName = \"/Users/igortihonov/PycharmProjects/googer_app/src/Chat/Chat.js\",\n  _s = $RefreshSig$();\n// Ваш файл Chat.js\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        // Замените на ваш URL эндпоинта, который возвращает ID текущего пользователя\n        const response = await fetch('http://localhost:8000/rip/get_current_user', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${YOUR_ACCESS_TOKEN}` // Замените YOUR_ACCESS_TOKEN на актуальный токен\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUserId(data.user_id);\n        } else {\n          // Обработка ошибок\n        }\n      } catch (error) {\n        console.error('Error fetching user ID:', error);\n      }\n    };\n    fetchUserId();\n  }, []); // Выполняется один раз при монтировании компонента\n\n  useEffect(() => {\n    if (userId) {\n      const newSocket = new WebSocket(`ws://localhost:8000/ws/${userId}`);\n      newSocket.onopen = () => {\n        console.log('WebSocket connection opened');\n      };\n      newSocket.onmessage = event => {\n        const message = event.data;\n        setMessages(prevMessages => [...prevMessages, message]);\n      };\n      newSocket.onclose = () => {\n        console.log('WebSocket connection closed');\n      };\n      setSocket(newSocket);\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [userId]);\n  const sendMessage = () => {\n    if (socket && inputValue.trim() !== '') {\n      socket.send(inputValue);\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          sendMessage();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"qoQBr5SSRiUZtVt/9Zq5IjsnRqk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","socket","setSocket","inputValue","setInputValue","userId","setUserId","fetchUserId","response","fetch","method","headers","YOUR_ACCESS_TOKEN","ok","data","json","user_id","error","console","newSocket","WebSocket","onopen","log","onmessage","event","message","prevMessages","onclose","close","sendMessage","trim","send","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/igortihonov/PycharmProjects/googer_app/src/Chat/Chat.js"],"sourcesContent":["// Ваш файл Chat.js\n\nimport React, { useEffect, useState } from 'react';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        // Замените на ваш URL эндпоинта, который возвращает ID текущего пользователя\n        const response = await fetch('http://localhost:8000/rip/get_current_user', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${YOUR_ACCESS_TOKEN}`, // Замените YOUR_ACCESS_TOKEN на актуальный токен\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setUserId(data.user_id);\n        } else {\n          // Обработка ошибок\n        }\n      } catch (error) {\n        console.error('Error fetching user ID:', error);\n      }\n    };\n\n    fetchUserId();\n  }, []); // Выполняется один раз при монтировании компонента\n\n  useEffect(() => {\n    if (userId) {\n      const newSocket = new WebSocket(`ws://localhost:8000/ws/${userId}`);\n    \n      newSocket.onopen = () => {\n        console.log('WebSocket connection opened');\n      };\n\n      newSocket.onmessage = (event) => {\n        const message = event.data;\n        setMessages((prevMessages) => [...prevMessages, message]);\n      };\n\n      newSocket.onclose = () => {\n        console.log('WebSocket connection closed');\n      };\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [userId]);\n\n  const sendMessage = () => {\n    if (socket && inputValue.trim() !== '') {\n      socket.send(inputValue);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((msg, index) => (\n          <div key={index}>{msg}</div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Type your message\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            sendMessage();\n          }\n        }}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;UACzEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAG,UAASC,iBAAkB,EAAC,CAAE;UAClD;QACF,CAAC,CAAC;QAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UAClCT,SAAS,CAACQ,IAAI,CAACE,OAAO,CAAC;QACzB,CAAC,MAAM;UACL;QAAA;MAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDV,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERd,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM,EAAE;MACV,MAAMc,SAAS,GAAG,IAAIC,SAAS,CAAE,0BAAyBf,MAAO,EAAC,CAAC;MAEnEc,SAAS,CAACE,MAAM,GAAG,MAAM;QACvBH,OAAO,CAACI,GAAG,CAAC,6BAA6B,CAAC;MAC5C,CAAC;MAEDH,SAAS,CAACI,SAAS,GAAIC,KAAK,IAAK;QAC/B,MAAMC,OAAO,GAAGD,KAAK,CAACV,IAAI;QAC1Bd,WAAW,CAAE0B,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;MAC3D,CAAC;MAEDN,SAAS,CAACQ,OAAO,GAAG,MAAM;QACxBT,OAAO,CAACI,GAAG,CAAC,6BAA6B,CAAC;MAC5C,CAAC;MAEDpB,SAAS,CAACiB,SAAS,CAAC;MAEpB,OAAO,MAAM;QACXA,SAAS,CAACS,KAAK,CAAC,CAAC;MACnB,CAAC;IACH;EACF,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;EAEZ,MAAMwB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI5B,MAAM,IAAIE,UAAU,CAAC2B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtC7B,MAAM,CAAC8B,IAAI,CAAC5B,UAAU,CAAC;MACvBC,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAAoC,QAAA,EACGjC,QAAQ,CAACkC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBvC,OAAA;QAAAoC,QAAA,EAAkBE;MAAG,GAAXC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3C,OAAA;MACE4C,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEvC,UAAW;MAClBwC,QAAQ,EAAGC,CAAC,IAAKxC,aAAa,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,SAAS,EAAGF,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;UACrBlB,WAAW,CAAC,CAAC;QACf;MACF;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACF3C,OAAA;MAAQoD,OAAO,EAAEnB,WAAY;MAAAG,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACzC,EAAA,CArFID,IAAI;AAAAoD,EAAA,GAAJpD,IAAI;AAuFV,eAAeA,IAAI;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}