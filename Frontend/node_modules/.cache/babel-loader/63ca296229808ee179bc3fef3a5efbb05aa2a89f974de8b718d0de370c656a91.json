{"ast":null,"code":"var _jsxFileName = \"/Users/igortihonov/PycharmProjects/googer_app/src/Auth/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = (token, id) => {\n    setIsAuthenticated(true);\n    setUserId(id);\n    console.log('User logged in:', id);\n    // Ваш код для сохранения токена или других данных аутентификации\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUserId(null);\n    console.log('User logged out');\n    // Ваш код для выхода из системы\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userId,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"G2ckXQCFbrFULIMuposjSP1MyAI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","userId","setUserId","isAuthenticated","setIsAuthenticated","login","token","id","console","log","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/igortihonov/PycharmProjects/googer_app/src/Auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [userId, setUserId] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const login = (token, id) => {\n    setIsAuthenticated(true);\n    setUserId(id);\n    console.log('User logged in:', id);\n    // Ваш код для сохранения токена или других данных аутентификации\n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUserId(null);\n    console.log('User logged out');\n    // Ваш код для выхода из системы\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, userId, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMW,KAAK,GAAGA,CAACC,KAAK,EAAEC,EAAE,KAAK;IAC3BH,kBAAkB,CAAC,IAAI,CAAC;IACxBF,SAAS,CAACK,EAAE,CAAC;IACbC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,EAAE,CAAC;IAClC;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBN,kBAAkB,CAAC,KAAK,CAAC;IACzBF,SAAS,CAAC,IAAI,CAAC;IACfM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAET,eAAe;MAAEF,MAAM;MAAEI,KAAK;MAAEK;IAAO,CAAE;IAAAX,QAAA,EACrEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CAvBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAyBzB,OAAO,MAAMoB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG3B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACuB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}