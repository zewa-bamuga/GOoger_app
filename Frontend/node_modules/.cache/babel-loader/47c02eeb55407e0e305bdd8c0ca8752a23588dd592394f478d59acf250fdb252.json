{"ast":null,"code":"var _jsxFileName = \"/Users/igortihonov/PycharmProjects/googer_app/src/Auth/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  // Ваша логика аутентификации\n\n  const login = token => {\n    // Ваш код для сохранения токена или других данных аутентификации\n    console.log('User logged in:', token);\n  };\n  const logout = () => {\n    // Ваш код для выхода из системы\n    console.log('User logged out');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","login","token","console","log","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s","context","Error","$RefreshReg$"],"sources":["/Users/igortihonov/PycharmProjects/googer_app/src/Auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  // Ваша логика аутентификации\n\n  const login = (token) => {\n    // Ваш код для сохранения токена или других данных аутентификации\n    console.log('User logged in:', token);\n  };\n\n  const logout = () => {\n    // Ваш код для выхода из системы\n    console.log('User logged out');\n  };\n\n  return (\n    <AuthContext.Provider value={{ login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C;;EAEA,MAAMC,KAAK,GAAIC,KAAK,IAAK;IACvB;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;EACvC,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEN,KAAK;MAAEI;IAAO,CAAE;IAAAL,QAAA,EAC5CA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACC,EAAA,GAlBWb,YAAY;AAoBzB,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGpB,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,CAACiB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}