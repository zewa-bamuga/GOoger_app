{"ast":null,"code":"var _jsxFileName = \"/Users/igortihonov/PycharmProjects/googer_app/src/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from '../Auth/AuthContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const {\n    userId,\n    token\n  } = useAuth(); // Получаем user_id из контекста\n\n  useEffect(() => {\n    const connectWebSocket = async () => {\n      try {\n        if (!userId) {\n          console.error('User ID is not available.');\n          return;\n        }\n        const response = await axios.get('http://127.0.0.1:8000/get_current_user', {\n          withCredentials: true\n        });\n        const currentUserId = response.data.user_id;\n        if (currentUserId !== userId) {\n          console.error('Invalid user ID.');\n          return;\n        }\n        const ws = new WebSocket(`ws://localhost:8000/chat/ws/${userId}`);\n        setWs(ws);\n        ws.onopen = () => {\n          console.log('Connected to the WebSocket');\n        };\n        ws.onmessage = event => {\n          const message = event.data;\n          setMessages(prevMessages => [...prevMessages, message]);\n        };\n        ws.onclose = event => {\n          console.error('WebSocket closed:', event);\n          // Try to reconnect after a delay\n          setTimeout(() => {\n            console.log('Reconnecting to WebSocket...');\n            connectWebSocket(); // Recursive call to reconnect\n          }, 1000);\n        };\n        ws.onerror = error => {\n          console.error('WebSocket error:', error);\n        };\n      } catch (error) {\n        console.error('Error connecting to WebSocket:', error);\n      }\n    };\n    connectWebSocket();\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [userId]);\n  const sendMessage = () => {\n    if (inputMessage && ws) {\n      ws.send(inputMessage);\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"prIxUnypq5HWU7inew21J5p2PBI=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","axios","jsxDEV","_jsxDEV","Chat","_s","ws","setWs","messages","setMessages","inputMessage","setInputMessage","userId","token","connectWebSocket","console","error","response","get","withCredentials","currentUserId","data","user_id","WebSocket","onopen","log","onmessage","event","message","prevMessages","onclose","setTimeout","onerror","close","sendMessage","send","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/igortihonov/PycharmProjects/googer_app/src/Chat/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../Auth/AuthContext';\nimport axios from 'axios';\n\nconst Chat = () => {\n  const [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n\n  const { userId, token } = useAuth(); // Получаем user_id из контекста\n\n  useEffect(() => {\n    const connectWebSocket = async () => {\n      try {\n        if (!userId) {\n          console.error('User ID is not available.');\n          return;\n        }\n\n        const response = await axios.get('http://127.0.0.1:8000/get_current_user', {\n          withCredentials: true,\n        });\n\n        const currentUserId = response.data.user_id;\n\n        if (currentUserId !== userId) {\n          console.error('Invalid user ID.');\n          return;\n        }\n\n        const ws = new WebSocket(`ws://localhost:8000/chat/ws/${userId}`);\n        setWs(ws);\n\n        ws.onopen = () => {\n          console.log('Connected to the WebSocket');\n        };\n\n        ws.onmessage = (event) => {\n          const message = event.data;\n          setMessages((prevMessages) => [...prevMessages, message]);\n        };\n\n        ws.onclose = (event) => {\n          console.error('WebSocket closed:', event);\n          // Try to reconnect after a delay\n          setTimeout(() => {\n            console.log('Reconnecting to WebSocket...');\n            connectWebSocket(); // Recursive call to reconnect\n          }, 1000);\n        };\n\n        ws.onerror = (error) => {\n          console.error('WebSocket error:', error);\n        };\n      } catch (error) {\n        console.error('Error connecting to WebSocket:', error);\n      }\n    };\n\n    connectWebSocket();\n\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [userId]);\n\n  const sendMessage = () => {\n    if (inputMessage && ws) {\n      ws.send(inputMessage);\n      setInputMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((message, index) => (\n          <div key={index}>{message}</div>\n        ))}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}